#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# CHECK VERSION
#=================================================

upgrade_type=$(ynh_check_app_version_changed)

abort_if_up_to_date
# previous function is what defines 'version', more precisely the 'previous version'
previous_version="${version}"

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Stopping a systemd service..."

ynh_systemd_action --service_name=$app --action="stop" --log_path=systemd --line_match="Stopped"

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression --message="Ensuring downward compatibility..."

ynh_secure_remove --file="$install_dir/$app/priv/data/GeoLite2-City.mmdb"

ynh_secure_remove --file="/usr/share/GeoIP"

if ynh_version_gt "1.0.0~ynh1" "${previous_version}" ; then
	ynh_script_progression --message="Upgrade configuration to 1.0.0..."

	ynh_user_password=$(ynh_string_random --length=30)
	ynh_app_setting_set --app=$app --key=ynh_user_password --value=$ynh_user_password

	yunohost user create ${app}_notifs --firstname "Mobilizon" --lastname "Notifications" --domain $domain --password "$ynh_user_password" -q 0
	yunohost user update ${app}_notifs --add-mailalias $app@$domain --add-mailforward $admin_email

	# Manage previous .env file
	ynh_backup_if_checksum_is_different --file="$install_dir/$app/.env"
	ynh_delete_file_checksum --file="$install_dir/$app/.env"
	ynh_secure_remove --file="$install_dir/$app/.env"

	# Configure Mobilizon
	config="$install_dir/$app/config/runtime.exs"
	ynh_add_config --template="../conf/runtime.exs" --destination="$config"

	# Implement ldap and mail
	cat "../conf/ldap.exs" >> "$config"
	ynh_replace_string --match_string="__YNH_USER__" --replace_string="${app}_notifs" --target_file="../conf/mail.exs"
	ynh_replace_string --match_string="__YNH_USER_PASSWORD__" --replace_string="${ynh_user_password}" --target_file="../conf/mail.exs"
	cat "../conf/mail.exs" >> "$config"

	# Recalculate and store the checksum of the file for the next upgrade.
	ynh_store_file_checksum --file="$config"
fi

# If data_dir doesn't exist, create it
if [ -z "$data_dir" ]; then
	ynh_script_progression --message="Create data_dir folder..."

	# Define app's data directory
	data_dir="/home/yunohost.app/${app}"

	ynh_app_setting_set --app=$app --key=data_dir --value="$data_dir"

	# Create app folders
	mkdir -p "$data_dir/"
	mkdir -p "$data_dir/uploads/"

	chmod 750 "$data_dir"
	chmod -R o-rwx "$data_dir"
	chown -R $app:$app "$data_dir"

	rsync -a $install_dir/$app/uploads/ $data_dir/uploads/

	config="$install_dir/$app/config/runtime.exs"

	ynh_backup_if_checksum_is_different --file="$config"

	ynh_replace_string --match_string="__DATA_DIR__" --replace_string="$data_dir" --target_file="../conf/uploads.exs"
	cat "../conf/uploads.exs" >> "$config"
	
	ynh_store_file_checksum --file="$config"

	chmod 400 "$config"
	chown $app:$app "$config"

	ynh_secure_remove --file="$install_dir/$app/uploads"
fi

if ynh_version_gt "1.2.3~ynh1" "${previous_version}" ; then
	ynh_script_progression --message="Upgrade to 1.2.3~ynh1..."
	ynh_delete_file_checksum --file="$install_dir/$app/config/runtime.exs"
	mv "$install_dir/$app/" "$install_dir/live/"
	ynh_store_file_checksum --file="$install_dir/live/config/runtime.exs"	
fi

if ynh_version_gt "2.0.2~ynh1" "${previous_version}" ; then
	mkdir -p /etc/$app
	if [ -f "$install_dir/live/config/prod.secret.exs" ]; then
		ynh_delete_file_checksum --file="$install_dir/live/config/prod.secret.exs"
		mv -f "$install_dir/live/config/prod.secret.exs" "/etc/$app/config.exs"
	fi
	if [ -f "$install_dir/live/config/runtime.exs" ]; then
		ynh_delete_file_checksum --file="$install_dir/live/config/runtime.exs"
		mv -f "$install_dir/live/config/runtime.exs" "/etc/$app/config.exs"
	fi
	chown -R $app:$app /etc/$app
	ynh_store_file_checksum --file="/etc/$app/config.exs"
fi

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

if [ "$upgrade_type" == "UPGRADE_APP" ]
then
	ynh_script_progression --message="Upgrading source files..."

	# Remove the app directory securely
	ynh_secure_remove --file="$install_dir/live"

	# Download, check integrity, uncompress and patch the source from app.src
	ynh_setup_source --dest_dir="$install_dir/live"
fi

chmod -R o-rwx "$install_dir"
chown -R $app:www-data "$install_dir"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Upgrading NGINX web server configuration..."

# Create a dedicated NGINX config
ynh_add_nginx_config

#=================================================
# MAKE SETUP
#=================================================
ynh_script_progression --message="Making setup..."

pushd $install_dir/live
	ynh_exec_as $app ./bin/mobilizon_ctl migrate
popd

#=================================================
# UPDATE A CONFIG FILE
#=================================================
ynh_script_progression --message="Updating a configuration file..."

config="/etc/$app/config.exs"

ynh_backup_if_checksum_is_different --file="$config"
ynh_replace_string --match_string="adapter: Swoosh.Adapters.SMTP," --replace_string="adapter: Bamboo.SMTPAdapter," --target_file="$config"
ynh_replace_string --match_string="relay: \"127.0.0.1\"," --replace_string="server: \"127.0.0.1\"," --target_file="$config"
ynh_store_file_checksum --file="$config"

chmod 400 "$config"
chown $app:$app "$config"

#=================================================
# SETUP SYSTEMD
#=================================================
ynh_script_progression --message="Upgrading systemd configuration..."

# Create a dedicated systemd config
ynh_add_systemd_config

#=================================================
# GENERIC FINALIZATION
#=================================================
# INTEGRATE SERVICE IN YUNOHOST
#=================================================
ynh_script_progression --message="Integrating service in YunoHost..."

yunohost service add $app --description="$app daemon for Mobilizon"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..."

ynh_systemd_action --service_name=$app --action="start" --log_path=systemd --line_match="Access Mobilizon.Web.Endpoint at"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Upgrade of $app completed"
